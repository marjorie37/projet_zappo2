import { Action, ColdSubscription } from 'popmotion';
import { Dimensions, Value, DomPopmotionPoser } from '../types';
import { Poser } from 'pose-core';
export declare const isFlipPose: (flip: boolean, key: string, state: {
    activeActions: Map<string, ColdSubscription>;
    activePoses: Map<string, string>;
    children: Set<Poser<Value, Action, ColdSubscription, DomPopmotionPoser>>;
    values: Map<string, Value>;
    props: {
        [key: string]: any;
    };
}) => boolean;
export declare const resolveProp: (target: any, props: {
    [key: string]: any;
}) => any;
export declare const flipPose: (props: {
    activeActions: Map<string, ColdSubscription>;
    activePoses: Map<string, string>;
    children: Set<Poser<Value, Action, ColdSubscription, DomPopmotionPoser>>;
    values: Map<string, Value>;
    props: {
        [key: string]: any;
    };
}, nextPose: {
    [key: string]: any;
    transition?: {
        [key: string]: ((props: {
            [key: string]: any;
        }) => false | Action | {
            [key: string]: any;
        }) | {
            [key: string]: any;
        };
    } | ((props: {
        [key: string]: any;
    }) => false | Action | {
        [key: string]: any;
    });
    delay?: number | ((props: {
        [key: string]: any;
    }) => number);
    delayChildren?: number | ((props: {
        [key: string]: any;
    }) => number);
    staggerChildren?: number | ((props: {
        [key: string]: any;
    }) => number);
    staggerDirection?: 1 | -1 | ((props: {
        [key: string]: any;
    }) => 1 | -1);
    beforeChildren?: boolean | ((props: {
        [key: string]: any;
    }) => boolean);
    afterChildren?: boolean | ((props: {
        [key: string]: any;
    }) => boolean);
    preTransform?: () => any;
}) => {
    scaleX?: number;
    scaleY?: number;
    x?: number;
    y?: number;
    transition?: {
        [key: string]: ((props: {
            [key: string]: any;
        }) => false | Action | {
            [key: string]: any;
        }) | {
            [key: string]: any;
        };
    } | ((props: {
        [key: string]: any;
    }) => false | Action | {
        [key: string]: any;
    });
    delay?: number | ((props: {
        [key: string]: any;
    }) => number);
    delayChildren?: number | ((props: {
        [key: string]: any;
    }) => number);
    staggerChildren?: number | ((props: {
        [key: string]: any;
    }) => number);
    staggerDirection?: 1 | -1 | ((props: {
        [key: string]: any;
    }) => 1 | -1);
    beforeChildren?: boolean | ((props: {
        [key: string]: any;
    }) => boolean);
    afterChildren?: boolean | ((props: {
        [key: string]: any;
    }) => boolean);
    preTransform?: () => any;
};
export { Action, Dimensions, ColdSubscription, DomPopmotionPoser, Poser, Value };
