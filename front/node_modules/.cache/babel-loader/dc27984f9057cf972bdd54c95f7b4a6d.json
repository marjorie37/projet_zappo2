{"ast":null,"code":"import _defineProperty from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/findev/Documents/lyon-0218-js-zappo/front/src/components/UserComponents/AccountForm.js\";\nimport React, { Component } from \"react\";\nimport validator from \"validator\"; // MATERIAL UI\n\nimport { Grid, Input, InputLabel, FormControl, Typography, Button, Paper, InputAdornment, IconButton, withStyles, Snackbar, Fade, FormHelperText } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      display: \"flex\"\n    }\n  };\n};\n\nvar AccountForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountForm, _Component);\n\n  function AccountForm(props) {\n    var _this;\n\n    _classCallCheck(this, AccountForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountForm).call(this, props));\n    _this.state = {\n      showPassword: false,\n      userName: \"\",\n      userEmail: \"\",\n      userPhone: \"\",\n      userPassword: \"\",\n      inputConfirmPassword: \"\",\n      touched: false,\n      showPasswordBis: false\n    };\n    return _this;\n  }\n\n  _createClass(AccountForm, [{\n    key: \"handleClickShowPassword\",\n    value: function handleClickShowPassword(e) {\n      this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    }\n  }, {\n    key: \"handleClickShowPasswordBis\",\n    value: function handleClickShowPasswordBis(e) {\n      this.setState(function (state) {\n        return {\n          showPasswordBis: !state.showPasswordBis\n        };\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this$setState;\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, e.target.id, e.target.value), _defineProperty(_this$setState, \"touched\", true), _this$setState));\n    }\n  }, {\n    key: \"goToCreate\",\n    value: function goToCreate() {\n      this.props.history.push(\"/identification/creation\", {\n        url: this.props.prevPath\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          formType = _this$props.formType,\n          _onSubmit = _this$props.onSubmit,\n          onBlurCheck = _this$props.onBlurCheck,\n          message = _this$props.message,\n          onOpenSnack = _this$props.onOpenSnack,\n          onSnackClose = _this$props.onSnackClose,\n          title = _this$props.title;\n      var _this$state = this.state,\n          userName = _this$state.userName,\n          userEmail = _this$state.userEmail,\n          userPhone = _this$state.userPhone,\n          userPassword = _this$state.userPassword,\n          inputConfirmPassword = _this$state.inputConfirmPassword;\n      var errorName = \"\";\n      var errorEmail = \"\";\n      var errorPhone = \"\";\n      var errorMdp = \"\";\n      var confErrorMdp = \"\";\n      var condition = true;\n      var regexPassword = new RegExp(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^ws]).{8,}$\");\n      var regexEmail = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\");\n      console.log(formType);\n\n      if (formType === \"signin\") {\n        if (userName.length >= 1) {\n          errorName = userName.length < 3 ? \"votre nom est trop court\" : \"\";\n        }\n\n        if (userEmail.length >= 1) {\n          errorEmail = regexEmail.test(userEmail) ? \"\" : \"Votre email n'est pas valide\";\n        }\n\n        if (userPhone.length >= 1) {\n          errorPhone = validator.isMobilePhone(userPhone, \"fr-FR\") ? \"\" : \"Votre numéro est incorrect\";\n        }\n\n        if (userPassword.length >= 1) {\n          errorMdp = regexPassword.test(userPassword) ? \"\" : \"votre mot de passe doit contenir 8 caractères dont un chiffre et une majuscule\";\n        }\n\n        if (userPassword.length >= 1) {\n          confErrorMdp = inputConfirmPassword === userPassword ? \"\" : \"Vos mots de passe ne sont pas identiques\";\n        }\n\n        if (!confErrorMdp.length && !errorMdp.length && !errorPhone.length && !errorEmail.length && !errorName.length && userName.length && userEmail.length && userPhone.length && userPassword.length && inputConfirmPassword.length) {\n          condition = false;\n        }\n      } else if (this.props.formType === \"login\") {\n        if (this.state.touched) {\n          if (this.state.userEmail.length >= 1) {\n            errorEmail = regexEmail.test(this.state.userEmail) ? \"\" : \"Veuillez entrer votre adresse email\";\n          }\n\n          if (this.state.userPassword.length < 1) {\n            errorMdp = \"Veuillez entrer votre mot de passe\";\n          }\n\n          if (!errorMdp.length && !errorEmail.length) {\n            condition = false;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: {\n          padding: \"1.6rem 1rem 2rem 1rem\",\n          marginTop: \"3rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        onBlur: onBlurCheck,\n        onSubmit: function onSubmit(e) {\n          e.preventDefault();\n\n          _onSubmit({\n            userName: _this2.state.userName,\n            userEmail: _this2.state.userEmail,\n            userPhone: _this2.state.userPhone,\n            userPassword: _this2.state.userPassword,\n            inputConfirmPassword: _this2.state.inputConfirmPassword\n          });\n\n          if (_this2.props.formType === \"signin\") {\n            _this2.props.redirectTo();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subheading\",\n        color: \"primary\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, title), formType === \"signin\" && React.createElement(FormControl, {\n        error: errorName.length,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Nom\"), React.createElement(Input, {\n        id: \"userName\",\n        name: \"name\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), errorName !== \"\" ? React.createElement(FormHelperText, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, errorName) : null), React.createElement(FormControl, {\n        error: errorEmail.length,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        id: \"userEmail\",\n        type: \"email\",\n        name: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), errorEmail !== \"\" ? React.createElement(FormHelperText, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, errorEmail) : null), formType === \"signin\" && React.createElement(FormControl, {\n        error: errorPhone.length,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"T\\xE9l\\xE9phone\"), React.createElement(Input, {\n        id: \"userPhone\",\n        type: \"tel\",\n        name: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), errorPhone !== \"\" ? React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, errorPhone) : null), React.createElement(FormControl, {\n        className: classes.formControl,\n        \"aria-describedby\": \"password\",\n        required: true,\n        error: errorMdp.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        id: \"userPassword\",\n        type: this.state.showPassword ? \"text\" : \"password\",\n        name: \"userPassword\",\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: function onClick(e) {\n            return _this2.handleClickShowPassword(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), errorMdp !== \"\" ? React.createElement(FormHelperText, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, errorMdp) : null), formType === \"signin\" && this.state.userPassword.length > 0 && React.createElement(FormControl, {\n        className: classes.formControl,\n        \"aria-describedby\": \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"inputConfirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Confirmer Mot de passe\"), React.createElement(Input, {\n        id: \"inputConfirmPassword\",\n        error: confErrorMdp,\n        type: this.state.showPasswordBis ? \"text\" : \"password\",\n        name: \"confirmPassword\",\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: function onClick(e) {\n            return _this2.handleClickShowPasswordBis(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, this.state.showPasswordBis ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), confErrorMdp !== \"\" ? React.createElement(FormHelperText, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, confErrorMdp) : null), React.createElement(Button, {\n        style: {\n          marginTop: \"2rem\"\n        },\n        variant: \"contained\",\n        fullWidth: true,\n        color: \"secondary\",\n        className: classes.button,\n        type: \"submit\",\n        disabled: condition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Valider\"), formType === \"login\" && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"a\",\n        href: \"/identification/rappel-de-mot-de-passe\",\n        align: \"right\",\n        variant: \"caption\",\n        style: {\n          marginTop: \"0.3rem\",\n          textDecoration: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Mot de passe oubli\\xE9\"), React.createElement(Typography, {\n        variant: \"subheading\",\n        color: \"primary\",\n        align: \"center\",\n        style: {\n          marginTop: \"2.6rem\",\n          marginBottom: \"0.7rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"C'est votre premi\\xE8re commande\"), React.createElement(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        className: classes.button,\n        onClick: function onClick() {\n          return _this2.goToCreate();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Cr\\xE9er un compte\")))))), React.createElement(Snackbar, {\n        open: onOpenSnack,\n        autoHideDuration: 3000,\n        onClose: onSnackClose,\n        TransitionComponent: Fade,\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AccountForm;\n}(Component);\n\nexport default withStyles(styles)(AccountForm);","map":{"version":3,"sources":["/home/findev/Documents/lyon-0218-js-zappo/front/src/components/UserComponents/AccountForm.js"],"names":["React","Component","validator","Grid","Input","InputLabel","FormControl","Typography","Button","Paper","InputAdornment","IconButton","withStyles","Snackbar","Fade","FormHelperText","Visibility","VisibilityOff","styles","theme","container","display","flexWrap","formControl","margin","spacing","unit","AccountForm","props","state","showPassword","userName","userEmail","userPhone","userPassword","inputConfirmPassword","touched","showPasswordBis","e","setState","target","id","value","history","push","url","prevPath","classes","formType","onSubmit","onBlurCheck","message","onOpenSnack","onSnackClose","title","errorName","errorEmail","errorPhone","errorMdp","confErrorMdp","condition","regexPassword","RegExp","regexEmail","console","log","length","test","isMobilePhone","padding","marginTop","handleChange","preventDefault","redirectTo","color","handleClickShowPassword","handleClickShowPasswordBis","button","textDecoration","marginBottom","goToCreate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport validator from \"validator\";\n// MATERIAL UI\nimport {\n  Grid,\n  Input,\n  InputLabel,\n  FormControl,\n  Typography,\n  Button,\n  Paper,\n  InputAdornment,\n  IconButton,\n  withStyles,\n  Snackbar,\n  Fade,\n  FormHelperText\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    display: \"flex\"\n  }\n});\n\nclass AccountForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false,\n      userName: \"\",\n      userEmail: \"\",\n      userPhone: \"\",\n      userPassword: \"\",\n      inputConfirmPassword: \"\",\n      touched: false,\n      showPasswordBis: false\n    };\n  }\n\n  handleClickShowPassword(e) {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  }\n\n  handleClickShowPasswordBis(e) {\n    this.setState(state => ({ showPasswordBis: !state.showPasswordBis }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value,\n      touched: true\n    });\n  }\n\n  goToCreate() {\n    this.props.history.push(\"/identification/creation\", {\n      url: this.props.prevPath\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      formType,\n      onSubmit,\n      onBlurCheck,\n      message,\n      onOpenSnack,\n      onSnackClose,\n      title\n    } = this.props;\n    const {\n      userName,\n      userEmail,\n      userPhone,\n      userPassword,\n      inputConfirmPassword\n    } = this.state;\n\n    let errorName = \"\";\n    let errorEmail = \"\";\n    let errorPhone = \"\";\n    let errorMdp = \"\";\n    let confErrorMdp = \"\";\n    let condition = true;\n    const regexPassword = new RegExp(\n      \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^ws]).{8,}$\"\n    );\n    const regexEmail = new RegExp(\n      \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n    );\n    console.log(formType);\n    if (formType === \"signin\") {\n      if (userName.length >= 1) {\n        errorName = userName.length < 3 ? \"votre nom est trop court\" : \"\";\n      }\n      if (userEmail.length >= 1) {\n        errorEmail = regexEmail.test(userEmail)\n          ? \"\"\n          : \"Votre email n'est pas valide\";\n      }\n      if (userPhone.length >= 1) {\n        errorPhone = validator.isMobilePhone(userPhone, \"fr-FR\")\n          ? \"\"\n          : \"Votre numéro est incorrect\";\n      }\n      if (userPassword.length >= 1) {\n        errorMdp = regexPassword.test(userPassword)\n          ? \"\"\n          : \"votre mot de passe doit contenir 8 caractères dont un chiffre et une majuscule\";\n      }\n\n      if (userPassword.length >= 1) {\n        confErrorMdp =\n          inputConfirmPassword === userPassword\n            ? \"\"\n            : \"Vos mots de passe ne sont pas identiques\";\n      }\n\n      if (\n        !confErrorMdp.length &&\n        !errorMdp.length &&\n        !errorPhone.length &&\n        !errorEmail.length &&\n        !errorName.length &&\n        userName.length &&\n        userEmail.length &&\n        userPhone.length &&\n        userPassword.length &&\n        inputConfirmPassword.length\n      ) {\n        condition = false;\n      }\n    } else if (this.props.formType === \"login\") {\n      if (this.state.touched) {\n        if (this.state.userEmail.length >= 1) {\n          errorEmail = regexEmail.test(this.state.userEmail)\n            ? \"\"\n            : \"Veuillez entrer votre adresse email\";\n        }\n        if (this.state.userPassword.length < 1) {\n          errorMdp = \"Veuillez entrer votre mot de passe\";\n        }\n\n        if (!errorMdp.length && !errorEmail.length) {\n          condition = false;\n        }\n      }\n    }\n\n    return (\n      <div>\n        <Grid container justify=\"center\">\n          <Grid item xs={10}>\n            <Paper\n              style={{\n                padding: \"1.6rem 1rem 2rem 1rem\",\n                marginTop: \"3rem\"\n              }}\n            >\n              <form\n                onChange={e => this.handleChange(e)}\n                onBlur={onBlurCheck}\n                onSubmit={e => {\n                  e.preventDefault();\n                  onSubmit({\n                    userName: this.state.userName,\n                    userEmail: this.state.userEmail,\n                    userPhone: this.state.userPhone,\n                    userPassword: this.state.userPassword,\n                    inputConfirmPassword: this.state.inputConfirmPassword\n                  });\n                  if (this.props.formType === \"signin\") {\n                    this.props.redirectTo();\n                  }\n                }}\n              >\n                <Typography variant=\"subheading\" color=\"primary\" align=\"center\">\n                  {title}\n                </Typography>\n                {/* NAME */}\n                {formType === \"signin\" && (\n                  <FormControl\n                    error={errorName.length}\n                    className={classes.formControl}\n                  >\n                    <InputLabel htmlFor=\"name\">Nom</InputLabel>\n                    <Input id=\"userName\" name=\"name\" type=\"text\" />\n                    {errorName !== \"\" ? (\n                      <FormHelperText style={{ color: \"red\" }}>\n                        {errorName}\n                      </FormHelperText>\n                    ) : null}\n                  </FormControl>\n                )}\n                {/* EMAIL */}\n                <FormControl\n                  error={errorEmail.length}\n                  className={classes.formControl}\n                >\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\n                  <Input id=\"userEmail\" type=\"email\" name=\"email\" />\n                  {errorEmail !== \"\" ? (\n                    <FormHelperText style={{ color: \"red\" }}>\n                      {errorEmail}\n                    </FormHelperText>\n                  ) : null}\n                </FormControl>\n                {/* TELEPHONE */}\n                {formType === \"signin\" && (\n                  <FormControl\n                    error={errorPhone.length}\n                    className={classes.formControl}\n                  >\n                    <InputLabel htmlFor=\"phone\">Téléphone</InputLabel>\n                    <Input id=\"userPhone\" type=\"tel\" name=\"phone\" />\n                    {errorPhone !== \"\" ? (\n                      <div style={{ color: \"red\" }}>{errorPhone}</div>\n                    ) : null}\n                  </FormControl>\n                )}\n                {/* PASSWORD */}\n                <FormControl\n                  className={classes.formControl}\n                  aria-describedby=\"password\"\n                  required\n                  error={errorMdp.length}\n                >\n                  <InputLabel htmlFor=\"password\">Password</InputLabel>\n\n                  <Input\n                    id=\"userPassword\"\n                    type={this.state.showPassword ? \"text\" : \"password\"}\n                    name=\"userPassword\"\n                    onChange={e => this.handleChange(e)}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"Toggle password visibility\"\n                          onClick={e => this.handleClickShowPassword(e)}\n                        >\n                          {this.state.showPassword ? (\n                            <VisibilityOff />\n                          ) : (\n                            <Visibility />\n                          )}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                  {errorMdp !== \"\" ? (\n                    <FormHelperText style={{ color: \"red\" }}>\n                      {errorMdp}\n                    </FormHelperText>\n                  ) : null}\n                </FormControl>\n                {/* PASSWORD CONFIRM */}\n                {formType === \"signin\" && this.state.userPassword.length > 0 && (\n                  <FormControl\n                    className={classes.formControl}\n                    aria-describedby=\"password\"\n                  >\n                    <InputLabel htmlFor=\"inputConfirmPassword\">\n                      Confirmer Mot de passe\n                    </InputLabel>\n\n                    <Input\n                      id=\"inputConfirmPassword\"\n                      error={confErrorMdp}\n                      type={this.state.showPasswordBis ? \"text\" : \"password\"}\n                      name=\"confirmPassword\"\n                      onChange={e => this.handleChange(e)}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"Toggle password visibility\"\n                            onClick={e => this.handleClickShowPasswordBis(e)}\n                          >\n                            {this.state.showPasswordBis ? (\n                              <VisibilityOff />\n                            ) : (\n                              <Visibility />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                    {confErrorMdp !== \"\" ? (\n                      <FormHelperText style={{ color: \"red\" }}>\n                        {confErrorMdp}\n                      </FormHelperText>\n                    ) : null}\n                  </FormControl>\n                )}\n                <Button\n                  style={{ marginTop: \"2rem\" }}\n                  variant=\"contained\"\n                  fullWidth={true}\n                  color=\"secondary\"\n                  className={classes.button}\n                  type=\"submit\"\n                  disabled={condition}\n                >\n                  Valider\n                </Button>\n                {/* Part for login only */}\n                {formType === \"login\" && (\n                  <div>\n                    <Typography\n                      component=\"a\"\n                      href=\"/identification/rappel-de-mot-de-passe\"\n                      align=\"right\"\n                      variant=\"caption\"\n                      style={{ marginTop: \"0.3rem\", textDecoration: \"none\" }}\n                    >\n                      Mot de passe oublié\n                    </Typography>\n                    <Typography\n                      variant=\"subheading\"\n                      color=\"primary\"\n                      align=\"center\"\n                      style={{ marginTop: \"2.6rem\", marginBottom: \"0.7rem\" }}\n                    >\n                      C'est votre première commande\n                    </Typography>\n                    <Button\n                      variant=\"contained\"\n                      fullWidth={true}\n                      className={classes.button}\n                      onClick={() => this.goToCreate()}\n                    >\n                      Créer un compte\n                    </Button>\n                  </div>\n                )}\n              </form>\n            </Paper>\n          </Grid>\n        </Grid>\n        <Snackbar\n          open={onOpenSnack}\n          autoHideDuration={3000}\n          onClose={onSnackClose}\n          TransitionComponent={Fade}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={message}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AccountForm);\n"]},"metadata":{},"sourceType":"module"}