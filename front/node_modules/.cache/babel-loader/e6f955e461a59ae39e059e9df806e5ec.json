{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _keycode = _interopRequireDefault(require(\"keycode\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"@material-ui/core/styles/withStyles\"));\n\nvar _ButtonBase = _interopRequireDefault(require(\"@material-ui/core/ButtonBase\"));\n\nvar _colorManipulator = require(\"@material-ui/core/styles/colorManipulator\");\n\nvar _clamp = _interopRequireDefault(require(\"../utils/clamp\"));\n\nvar styles = function styles(theme) {\n  var commonTransitionsOptions = {\n    duration: theme.transitions.duration.short,\n    easing: theme.transitions.easing.easeOut\n  };\n  var commonTransitions = theme.transitions.create(['width', 'height', 'left', 'top', 'box-shadow'], commonTransitionsOptions); // no transition on the position\n\n  var thumbActivatedTransitions = theme.transitions.create(['width', 'height', 'box-shadow'], commonTransitionsOptions);\n  var colors = {\n    primary: theme.palette.primary.main,\n    disabled: theme.palette.grey[400]\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      width: '100%',\n      padding: '16px 8px',\n      cursor: 'pointer',\n      WebkitTapHighlightColor: 'transparent',\n      '&$disabled': {\n        cursor: 'no-drop'\n      },\n      '&$vertical': {\n        height: '100%',\n        padding: '8px 16px'\n      },\n      '&$reverse': {\n        transform: 'scaleX(-1)'\n      },\n      '&$vertical$reverse': {\n        transform: 'scaleY(-1)'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      position: 'relative',\n      '&$vertical': {\n        height: '100%'\n      }\n    },\n\n    /* Styles applied to the track elements. */\n    track: {\n      position: 'absolute',\n      transform: 'translate(0, -50%)',\n      top: '50%',\n      height: 2,\n      backgroundColor: colors.primary,\n      '&$activated': {\n        transition: 'none'\n      },\n      '&$disabled': {\n        backgroundColor: colors.disabled\n      },\n      '&$vertical': {\n        transform: 'translate(-50%, 0)',\n        left: '50%',\n        top: 'initial',\n        width: 2\n      }\n    },\n\n    /* Styles applied to the track element before the thumb. */\n    trackBefore: {\n      zIndex: 1,\n      left: 0,\n      transition: commonTransitions\n    },\n\n    /* Styles applied to the track element after the thumb. */\n    trackAfter: {\n      right: 0,\n      opacity: 0.24,\n      transition: commonTransitions,\n      '&$vertical': {\n        bottom: 0\n      }\n    },\n\n    /* Styles applied to the thumb element. */\n    thumb: {\n      position: 'absolute',\n      zIndex: 2,\n      transform: 'translate(-50%, -50%)',\n      width: 12,\n      height: 12,\n      borderRadius: '50%',\n      transition: commonTransitions,\n      backgroundColor: colors.primary,\n      '&$focused': {\n        boxShadow: \"0px 0px 0px 9px \".concat((0, _colorManipulator.fade)(colors.primary, 0.16))\n      },\n      '&$activated': {\n        width: 17,\n        height: 17,\n        transition: thumbActivatedTransitions\n      },\n      '&$disabled': {\n        cursor: 'no-drop',\n        width: 9,\n        height: 9,\n        backgroundColor: colors.disabled\n      },\n      '&$jumped': {\n        width: 17,\n        height: 17\n      }\n    },\n\n    /* Class applied to the root element to trigger JSS nested styles if `reverse={true}` . */\n    reverse: {},\n\n    /* Class applied to the track and thumb elements to trigger JSS nested styles if `disabled`. */\n    disabled: {},\n\n    /* Class applied to the track and thumb elements to trigger JSS nested styles if `jumped`. */\n    jumped: {},\n\n    /* Class applied to the track and thumb elements to trigger JSS nested styles if `focused`. */\n    focused: {},\n\n    /* Class applied to the track and thumb elements to trigger JSS nested styles if `activated`. */\n    activated: {},\n\n    /* Class applied to the root, track and container to trigger JSS nested styles if `vertical`. */\n    vertical: {}\n  };\n};\n\nexports.styles = styles;\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent / 100 + min;\n}\n\nfunction roundToStep(number, step) {\n  return Math.round(number / step) * step;\n}\n\nfunction getOffset(node) {\n  var _global = global,\n      pageYOffset = _global.pageYOffset,\n      pageXOffset = _global.pageXOffset;\n\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      left = _node$getBoundingClie.left,\n      top = _node$getBoundingClie.top;\n\n  return {\n    top: top + pageYOffset,\n    left: left + pageXOffset\n  };\n}\n\nfunction getMousePosition(event) {\n  if (event.changedTouches && event.changedTouches[0]) {\n    return {\n      x: event.changedTouches[0].pageX,\n      y: event.changedTouches[0].pageY\n    };\n  }\n\n  return {\n    x: event.pageX,\n    y: event.pageY\n  };\n}\n\nfunction calculatePercent(node, event, isVertical, isReverted) {\n  var _node$getBoundingClie2 = node.getBoundingClientRect(),\n      width = _node$getBoundingClie2.width,\n      height = _node$getBoundingClie2.height;\n\n  var _getOffset = getOffset(node),\n      top = _getOffset.top,\n      left = _getOffset.left;\n\n  var _getMousePosition = getMousePosition(event),\n      x = _getMousePosition.x,\n      y = _getMousePosition.y;\n\n  var value = isVertical ? y - top : x - left;\n  var onePercent = (isVertical ? height : width) / 100;\n  return isReverted ? 100 - (0, _clamp.default)(value / onePercent) : (0, _clamp.default)(value / onePercent);\n}\n\nfunction preventPageScrolling(event) {\n  event.preventDefault();\n}\n/* istanbul ignore if */\n\n\nif (process.env.NODE_ENV !== 'production' && !_react.default.createContext) {\n  throw new Error('Material-UI: react@16.3.0 or greater is required.');\n}\n\nvar Slider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(Slider, _React$Component);\n\n  function Slider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Slider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentState: 'initial'\n    };\n    _this.jumpAnimationTimeoutId = -1;\n\n    _this.handleKeyDown = function (event) {\n      var _this$props = _this.props,\n          min = _this$props.min,\n          max = _this$props.max,\n          currentValue = _this$props.value;\n      var onePercent = Math.abs((max - min) / 100);\n      var step = _this.props.step || onePercent;\n      var value;\n\n      switch ((0, _keycode.default)(event)) {\n        case 'home':\n          value = min;\n          break;\n\n        case 'end':\n          value = max;\n          break;\n\n        case 'page up':\n          value = currentValue + onePercent * 10;\n          break;\n\n        case 'page down':\n          value = currentValue - onePercent * 10;\n          break;\n\n        case 'right':\n        case 'up':\n          value = currentValue + step;\n          break;\n\n        case 'left':\n        case 'down':\n          value = currentValue - step;\n          break;\n\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      value = (0, _clamp.default)(value, min, max);\n\n      _this.emitChange(event, value);\n    };\n\n    _this.handleFocus = function () {\n      _this.setState({\n        currentState: 'focused'\n      });\n    };\n\n    _this.handleBlur = function () {\n      _this.setState({\n        currentState: 'normal'\n      });\n    };\n\n    _this.handleClick = function (event) {\n      var _this$props2 = _this.props,\n          min = _this$props2.min,\n          max = _this$props2.max,\n          vertical = _this$props2.vertical,\n          reverse = _this$props2.reverse;\n      var percent = calculatePercent(_this.containerRef, event, vertical, reverse);\n      var value = percentToValue(percent, min, max);\n\n      _this.emitChange(event, value, function () {\n        _this.playJumpAnimation();\n      });\n    };\n\n    _this.handleTouchStart = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        currentState: 'activated'\n      });\n\n      document.body.addEventListener('touchend', _this.handleMouseUp);\n\n      if (typeof _this.props.onDragStart === 'function') {\n        _this.props.onDragStart(event);\n      }\n    };\n\n    _this.handleMouseDown = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        currentState: 'activated'\n      });\n\n      document.body.addEventListener('mousemove', _this.handleMouseMove);\n      document.body.addEventListener('mouseup', _this.handleMouseUp);\n\n      if (typeof _this.props.onDragStart === 'function') {\n        _this.props.onDragStart(event);\n      }\n    };\n\n    _this.handleMouseUp = function (event) {\n      _this.setState({\n        currentState: 'normal'\n      });\n\n      document.body.removeEventListener('mousemove', _this.handleMouseMove);\n      document.body.removeEventListener('mouseup', _this.handleMouseUp);\n\n      if (typeof _this.props.onDragEnd === 'function') {\n        _this.props.onDragEnd(event);\n      }\n    };\n\n    _this.handleMouseMove = function (event) {\n      var _this$props3 = _this.props,\n          min = _this$props3.min,\n          max = _this$props3.max,\n          vertical = _this$props3.vertical,\n          reverse = _this$props3.reverse;\n      var percent = calculatePercent(_this.containerRef, event, vertical, reverse);\n      var value = percentToValue(percent, min, max);\n\n      _this.emitChange(event, value);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.containerRef) {\n        this.containerRef.addEventListener('touchstart', preventPageScrolling, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.containerRef.removeEventListener('touchstart', preventPageScrolling, {\n        passive: false\n      });\n      document.body.removeEventListener('mousemove', this.handleMouseMove);\n      document.body.removeEventListener('mouseup', this.handleMouseUp);\n      clearTimeout(this.jumpAnimationTimeoutId);\n    }\n  }, {\n    key: \"emitChange\",\n    value: function emitChange(event, rawValue, callback) {\n      var _this$props4 = this.props,\n          step = _this$props4.step,\n          previousValue = _this$props4.value,\n          onChange = _this$props4.onChange,\n          disabled = _this$props4.disabled;\n      var value = rawValue;\n\n      if (disabled) {\n        return;\n      }\n\n      if (step) {\n        value = roundToStep(rawValue, step);\n      } else {\n        value = Number(rawValue.toFixed(3));\n      }\n\n      if (typeof onChange === 'function' && value !== previousValue) {\n        onChange(event, value);\n\n        if (typeof callback === 'function') {\n          callback();\n        }\n      }\n    }\n  }, {\n    key: \"calculateTrackAfterStyles\",\n    value: function calculateTrackAfterStyles(percent) {\n      var currentState = this.state.currentState;\n\n      switch (currentState) {\n        case 'activated':\n          return \"calc(100% - \".concat(percent === 0 ? 7 : 5, \"px)\");\n\n        case 'disabled':\n          return \"calc(\".concat(100 - percent, \"% - 6px)\");\n\n        default:\n          return 'calc(100% - 5px)';\n      }\n    }\n  }, {\n    key: \"calculateTrackBeforeStyles\",\n    value: function calculateTrackBeforeStyles(percent) {\n      var currentState = this.state.currentState;\n\n      switch (currentState) {\n        case 'disabled':\n          return \"calc(\".concat(percent, \"% - 6px)\");\n\n        default:\n          return \"\".concat(percent, \"%\");\n      }\n    }\n  }, {\n    key: \"playJumpAnimation\",\n    value: function playJumpAnimation() {\n      var _this2 = this;\n\n      this.setState({\n        currentState: 'jumped'\n      }, function () {\n        clearTimeout(_this2.jumpAnimationTimeoutId);\n        _this2.jumpAnimationTimeoutId = setTimeout(function () {\n          _this2.setState({\n            currentState: 'normal'\n          });\n        }, _this2.props.theme.transitions.duration.complex);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _commonClasses,\n          _classNames,\n          _this3 = this;\n\n      var currentState = this.state.currentState;\n      var _this$props5 = this.props,\n          Component = _this$props5.component,\n          classes = _this$props5.classes,\n          classNameProp = _this$props5.className,\n          disabled = _this$props5.disabled,\n          max = _this$props5.max,\n          min = _this$props5.min,\n          reverse = _this$props5.reverse,\n          theme = _this$props5.theme,\n          value = _this$props5.value,\n          vertical = _this$props5.vertical,\n          other = (0, _objectWithoutProperties2.default)(_this$props5, [\"component\", \"classes\", \"className\", \"disabled\", \"max\", \"min\", \"reverse\", \"theme\", \"value\", \"vertical\"]);\n      var percent = (0, _clamp.default)((value - min) * 100 / (max - min));\n      var commonClasses = (_commonClasses = {}, (0, _defineProperty2.default)(_commonClasses, classes.disabled, disabled), (0, _defineProperty2.default)(_commonClasses, classes.jumped, !disabled && currentState === 'jumped'), (0, _defineProperty2.default)(_commonClasses, classes.focused, !disabled && currentState === 'focused'), (0, _defineProperty2.default)(_commonClasses, classes.activated, !disabled && currentState === 'activated'), _commonClasses);\n      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.vertical, vertical), (0, _defineProperty2.default)(_classNames, classes.reverse, reverse), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), _classNames), classNameProp);\n      var containerClasses = (0, _classnames.default)(classes.container, (0, _defineProperty2.default)({}, classes.vertical, vertical));\n      var trackBeforeClasses = (0, _classnames.default)(classes.track, classes.trackBefore, commonClasses, (0, _defineProperty2.default)({}, classes.vertical, vertical));\n      var trackAfterClasses = (0, _classnames.default)(classes.track, classes.trackAfter, commonClasses, (0, _defineProperty2.default)({}, classes.vertical, vertical));\n      var thumbClasses = (0, _classnames.default)(classes.thumb, commonClasses);\n      var trackProperty = vertical ? 'height' : 'width';\n      var thumbProperty = vertical ? 'top' : 'left';\n      var inlineTrackBeforeStyles = (0, _defineProperty2.default)({}, trackProperty, this.calculateTrackBeforeStyles(percent));\n      var inlineTrackAfterStyles = (0, _defineProperty2.default)({}, trackProperty, this.calculateTrackAfterStyles(percent));\n      var inlineThumbStyles = (0, _defineProperty2.default)({}, thumbProperty, \"\".concat(percent, \"%\"));\n      return _react.default.createElement(Component, (0, _extends2.default)({\n        role: \"slider\",\n        className: className,\n        \"aria-valuenow\": value,\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-orientation\": vertical ? 'vertical' : 'horizontal',\n        onClick: this.handleClick,\n        onMouseDown: this.handleMouseDown,\n        onTouchStartCapture: this.handleTouchStart,\n        onTouchMove: this.handleMouseMove,\n        ref: function ref(_ref) {\n          _this3.containerRef = (0, _reactDom.findDOMNode)(_ref);\n        }\n      }, other), _react.default.createElement(\"div\", {\n        className: containerClasses\n      }, _react.default.createElement(\"div\", {\n        className: trackBeforeClasses,\n        style: inlineTrackBeforeStyles\n      }), _react.default.createElement(_ButtonBase.default, {\n        className: thumbClasses,\n        disableRipple: true,\n        style: inlineThumbStyles,\n        onBlur: this.handleBlur,\n        onKeyDown: this.handleKeyDown,\n        onTouchStartCapture: this.handleTouchStart,\n        onTouchMove: this.handleMouseMove,\n        onFocusVisible: this.handleFocus\n      }), _react.default.createElement(\"div\", {\n        className: trackAfterClasses,\n        style: inlineTrackAfterStyles\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.disabled) {\n        return {\n          currentState: 'disabled'\n        };\n      }\n\n      if (!nextProps.disabled && prevState.currentState === 'disabled') {\n        return {\n          currentState: 'normal'\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return Slider;\n}(_react.default.Component);\n\nSlider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * If `true`, the slider will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * The maximum allowed value of the slider.\n   * Should not be equal to min.\n   */\n  max: _propTypes.default.number,\n\n  /**\n   * The minimum allowed value of the slider.\n   * Should not be equal to max.\n   */\n  min: _propTypes.default.number,\n\n  /**\n   * Callback function that is fired when the slider's value changed.\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback function that is fired when the slide has stopped moving.\n   */\n  onDragEnd: _propTypes.default.func,\n\n  /**\n   * Callback function that is fired when the slider has begun to move.\n   */\n  onDragStart: _propTypes.default.func,\n\n  /**\n   * If `true`, the slider will be reversed.\n   */\n  reverse: _propTypes.default.bool,\n\n  /**\n   * The granularity the slider can step through values.\n   */\n  step: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * The value of the slider.\n   */\n  value: _propTypes.default.number.isRequired,\n\n  /**\n   * If `true`, the slider will be vertical.\n   */\n  vertical: _propTypes.default.bool\n} : {};\nSlider.defaultProps = {\n  min: 0,\n  max: 100,\n  component: 'div'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSlider',\n  withTheme: true\n})(Slider);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}