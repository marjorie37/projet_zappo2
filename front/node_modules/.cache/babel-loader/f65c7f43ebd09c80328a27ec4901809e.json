{"ast":null,"code":"import _defineProperty from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/findev/Documents/lyon-0218-js-zappo/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/findev/Documents/lyon-0218-js-zappo/front/src/components/UserComponents/AccountForm.js\";\nimport React, { Component } from \"react\";\nimport validator from \"validator\"; // MATERIAL UI\n\nimport { Grid, Input, InputLabel, FormControl, Typography, Button, Paper, InputAdornment, IconButton, withStyles, Snackbar, Fade, FormHelperText } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      display: \"flex\"\n    },\n    errors: {\n      color: \"red\"\n    }\n  };\n};\n\nvar AccountForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountForm, _Component);\n\n  function AccountForm(props) {\n    var _this;\n\n    _classCallCheck(this, AccountForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountForm).call(this, props));\n    _this.state = {\n      showPassword: false,\n      userName: \"\",\n      userEmail: \"\",\n      userPhone: \"\",\n      userPassword: \"\",\n      inputConfirmPassword: \"\",\n      touched: false,\n      showPasswordBis: false\n    };\n    return _this;\n  }\n\n  _createClass(AccountForm, [{\n    key: \"handleClickShowPassword\",\n    value: function handleClickShowPassword(e) {\n      this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    }\n  }, {\n    key: \"handleClickShowPasswordBis\",\n    value: function handleClickShowPasswordBis(e) {\n      this.setState(function (state) {\n        return {\n          showPasswordBis: !state.showPasswordBis\n        };\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this$setState;\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, e.target.id, e.target.value), _defineProperty(_this$setState, \"touched\", true), _this$setState));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      onSubmit({\n        userName: this.state.userName,\n        userEmail: this.state.userEmail,\n        userPhone: this.state.userPhone,\n        userPassword: this.state.userPassword,\n        inputConfirmPassword: this.state.inputConfirmPassword\n      });\n\n      if (this.props.formType === \"signin\") {\n        this.props.redirectTo();\n      }\n    }\n  }, {\n    key: \"goToCreate\",\n    value: function goToCreate() {\n      this.props.history.push(\"/identification/creation\", {\n        url: this.props.prevPath\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          formType = _this$props.formType,\n          onSubmit = _this$props.onSubmit,\n          onBlurCheck = _this$props.onBlurCheck,\n          message = _this$props.message,\n          onOpenSnack = _this$props.onOpenSnack,\n          onSnackClose = _this$props.onSnackClose,\n          title = _this$props.title;\n      var _this$state = this.state,\n          userName = _this$state.userName,\n          userEmail = _this$state.userEmail,\n          userPhone = _this$state.userPhone,\n          userPassword = _this$state.userPassword,\n          inputConfirmPassword = _this$state.inputConfirmPassword,\n          touched = _this$state.touched; // validations part of the component. With a condition named \"noValidate\" so we have different\n      // validators for the login and signin parts\n\n      var errorName = \"\";\n      var errorEmail = \"\";\n      var errorPhone = \"\";\n      var errorMdp = \"\";\n      var confErrorMdp = \"\";\n      var noValidate = true;\n      var regexPassword = new RegExp(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^ws]).{8,}$\");\n      var regexEmail = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"); // validators for the signin part :\n\n      if (formType === \"signin\") {\n        if (userName.length >= 1) {\n          errorName = userName.length < 3 ? \"votre nom est trop court\" : \"\";\n        }\n\n        if (userEmail.length >= 1) {\n          errorEmail = regexEmail.test(userEmail) ? \"\" : \"Votre email n'est pas valide\";\n        }\n\n        if (userPhone.length >= 1) {\n          errorPhone = validator.isMobilePhone(userPhone, \"fr-FR\") ? \"\" : \"Votre numéro est incorrect\";\n        }\n\n        if (userPassword.length >= 1) {\n          errorMdp = regexPassword.test(userPassword) ? \"\" : \"votre mot de passe doit contenir 8 caractères dont un chiffre et une majuscule\";\n        }\n\n        if (userPassword.length >= 1) {\n          confErrorMdp = inputConfirmPassword === userPassword ? \"\" : \"Vos mots de passe ne sont pas identiques\";\n        }\n\n        if (!confErrorMdp.length && !errorMdp.length && !errorPhone.length && !errorEmail.length && !errorName.length && userName.length && userEmail.length && userPhone.length && userPassword.length && inputConfirmPassword.length) {\n          noValidate = false;\n        } // validators for the login part\n\n      } else if (formType === \"login\") {\n        if (touched) {\n          if (userEmail.length >= 1) {\n            errorEmail = regexEmail.test(this.state.userEmail) ? \"\" : \"Veuillez entrer votre adresse email\";\n          }\n\n          if (userPassword.length < 1) {\n            errorMdp = \"Veuillez entrer votre mot de passe\";\n          }\n\n          if (!errorMdp.length && !errorEmail.length) {\n            noValidate = false;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: {\n          padding: \"1.6rem 1rem 2rem 1rem\",\n          marginTop: \"3rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        onBlur: onBlurCheck,\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subheading\",\n        color: \"primary\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, title), formType === \"signin\" && React.createElement(FormControl, {\n        error: errorName.length,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Nom\"), React.createElement(Input, {\n        id: \"userName\",\n        name: \"name\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), errorName !== \"\" ? React.createElement(FormHelperText, {\n        className: classes.errors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, errorName) : null), React.createElement(FormControl, {\n        error: errorEmail.length,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        id: \"userEmail\",\n        type: \"email\",\n        name: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), errorEmail !== \"\" ? React.createElement(FormHelperText, {\n        className: classes.errors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, errorEmail) : null), formType === \"signin\" && React.createElement(FormControl, {\n        error: errorPhone.length,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"T\\xE9l\\xE9phone\"), React.createElement(Input, {\n        id: \"userPhone\",\n        type: \"tel\",\n        name: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), errorPhone !== \"\" ? React.createElement(FormHelperText, {\n        className: classes.errors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, errorPhone) : null), React.createElement(FormControl, {\n        className: classes.formControl,\n        \"aria-describedby\": \"password\",\n        required: true,\n        error: errorMdp.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        id: \"userPassword\",\n        type: this.state.showPassword ? \"text\" : \"password\",\n        name: \"userPassword\",\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: function onClick(e) {\n            return _this2.handleClickShowPassword(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), errorMdp !== \"\" ? React.createElement(FormHelperText, {\n        className: classes.errors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, errorMdp) : null), formType === \"signin\" && this.state.userPassword.length > 0 && React.createElement(FormControl, {\n        className: classes.formControl,\n        \"aria-describedby\": \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"inputConfirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Confirmer Mot de passe\"), React.createElement(Input, {\n        id: \"inputConfirmPassword\",\n        error: confErrorMdp,\n        type: this.state.showPasswordBis ? \"text\" : \"password\",\n        name: \"confirmPassword\",\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: function onClick(e) {\n            return _this2.handleClickShowPasswordBis(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, this.state.showPasswordBis ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), confErrorMdp !== \"\" ? React.createElement(FormHelperText, {\n        className: classes.errors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, confErrorMdp) : null), React.createElement(Button, {\n        style: {\n          marginTop: \"2rem\"\n        },\n        variant: \"contained\",\n        fullWidth: true,\n        color: \"secondary\",\n        className: classes.button,\n        type: \"submit\",\n        disabled: noValidate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Valider\"), formType === \"login\" && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"a\",\n        href: \"/identification/rappel-de-mot-de-passe\",\n        align: \"right\",\n        variant: \"caption\",\n        style: {\n          marginTop: \"0.3rem\",\n          textDecoration: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Mot de passe oubli\\xE9\"), React.createElement(Typography, {\n        variant: \"subheading\",\n        color: \"primary\",\n        align: \"center\",\n        style: {\n          marginTop: \"2.6rem\",\n          marginBottom: \"0.7rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"C'est votre premi\\xE8re commande\"), React.createElement(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        className: classes.button,\n        onClick: function onClick() {\n          return _this2.goToCreate();\n        },\n        disabled: noValidate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Cr\\xE9er un compte\")))))), React.createElement(Snackbar, {\n        open: onOpenSnack,\n        autoHideDuration: 3000,\n        onClose: onSnackClose,\n        TransitionComponent: Fade,\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AccountForm;\n}(Component);\n\nexport default withStyles(styles)(AccountForm);","map":{"version":3,"sources":["/home/findev/Documents/lyon-0218-js-zappo/front/src/components/UserComponents/AccountForm.js"],"names":["React","Component","validator","Grid","Input","InputLabel","FormControl","Typography","Button","Paper","InputAdornment","IconButton","withStyles","Snackbar","Fade","FormHelperText","Visibility","VisibilityOff","styles","theme","container","display","flexWrap","formControl","margin","spacing","unit","errors","color","AccountForm","props","state","showPassword","userName","userEmail","userPhone","userPassword","inputConfirmPassword","touched","showPasswordBis","e","setState","target","id","value","preventDefault","onSubmit","formType","redirectTo","history","push","url","prevPath","classes","onBlurCheck","message","onOpenSnack","onSnackClose","title","errorName","errorEmail","errorPhone","errorMdp","confErrorMdp","noValidate","regexPassword","RegExp","regexEmail","length","test","isMobilePhone","padding","marginTop","handleChange","handleSubmit","handleClickShowPassword","handleClickShowPasswordBis","button","textDecoration","marginBottom","goToCreate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport validator from \"validator\";\n// MATERIAL UI\nimport {\n  Grid,\n  Input,\n  InputLabel,\n  FormControl,\n  Typography,\n  Button,\n  Paper,\n  InputAdornment,\n  IconButton,\n  withStyles,\n  Snackbar,\n  Fade,\n  FormHelperText\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    display: \"flex\"\n  },\n  errors: {\n    color: \"red\"\n  }\n});\n\nclass AccountForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false,\n      userName: \"\",\n      userEmail: \"\",\n      userPhone: \"\",\n      userPassword: \"\",\n      inputConfirmPassword: \"\",\n      touched: false,\n      showPasswordBis: false\n    };\n  }\n\n  handleClickShowPassword(e) {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  }\n\n  handleClickShowPasswordBis(e) {\n    this.setState(state => ({ showPasswordBis: !state.showPasswordBis }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value,\n      touched: true\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    onSubmit({\n      userName: this.state.userName,\n      userEmail: this.state.userEmail,\n      userPhone: this.state.userPhone,\n      userPassword: this.state.userPassword,\n      inputConfirmPassword: this.state.inputConfirmPassword\n    });\n    if (this.props.formType === \"signin\") {\n      this.props.redirectTo();\n    }\n  }\n\n  goToCreate() {\n    this.props.history.push(\"/identification/creation\", {\n      url: this.props.prevPath\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      formType,\n      onSubmit,\n      onBlurCheck,\n      message,\n      onOpenSnack,\n      onSnackClose,\n      title\n    } = this.props;\n    const {\n      userName,\n      userEmail,\n      userPhone,\n      userPassword,\n      inputConfirmPassword,\n      touched\n    } = this.state;\n\n    // validations part of the component. With a condition named \"noValidate\" so we have different\n    // validators for the login and signin parts\n    let errorName = \"\";\n    let errorEmail = \"\";\n    let errorPhone = \"\";\n    let errorMdp = \"\";\n    let confErrorMdp = \"\";\n    let noValidate = true;\n    const regexPassword = new RegExp(\n      \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^ws]).{8,}$\"\n    );\n    const regexEmail = new RegExp(\n      \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n    );\n    // validators for the signin part :\n    if (formType === \"signin\") {\n      if (userName.length >= 1) {\n        errorName = userName.length < 3 ? \"votre nom est trop court\" : \"\";\n      }\n      if (userEmail.length >= 1) {\n        errorEmail = regexEmail.test(userEmail)\n          ? \"\"\n          : \"Votre email n'est pas valide\";\n      }\n      if (userPhone.length >= 1) {\n        errorPhone = validator.isMobilePhone(userPhone, \"fr-FR\")\n          ? \"\"\n          : \"Votre numéro est incorrect\";\n      }\n      if (userPassword.length >= 1) {\n        errorMdp = regexPassword.test(userPassword)\n          ? \"\"\n          : \"votre mot de passe doit contenir 8 caractères dont un chiffre et une majuscule\";\n      }\n      if (userPassword.length >= 1) {\n        confErrorMdp =\n          inputConfirmPassword === userPassword\n            ? \"\"\n            : \"Vos mots de passe ne sont pas identiques\";\n      }\n      if (\n        !confErrorMdp.length &&\n        !errorMdp.length &&\n        !errorPhone.length &&\n        !errorEmail.length &&\n        !errorName.length &&\n        userName.length &&\n        userEmail.length &&\n        userPhone.length &&\n        userPassword.length &&\n        inputConfirmPassword.length\n      ) {\n        noValidate = false;\n      }\n\n      // validators for the login part\n    } else if (formType === \"login\") {\n      if (touched) {\n        if (userEmail.length >= 1) {\n          errorEmail = regexEmail.test(this.state.userEmail)\n            ? \"\"\n            : \"Veuillez entrer votre adresse email\";\n        }\n        if (userPassword.length < 1) {\n          errorMdp = \"Veuillez entrer votre mot de passe\";\n        }\n\n        if (!errorMdp.length && !errorEmail.length) {\n          noValidate = false;\n        }\n      }\n    }\n\n    return (\n      <div>\n        <Grid container justify=\"center\">\n          <Grid item xs={10}>\n            <Paper\n              style={{\n                padding: \"1.6rem 1rem 2rem 1rem\",\n                marginTop: \"3rem\"\n              }}\n            >\n              <form\n                onChange={e => this.handleChange(e)}\n                onBlur={onBlurCheck}\n                onSubmit={e => this.handleSubmit(e)}\n              >\n                <Typography variant=\"subheading\" color=\"primary\" align=\"center\">\n                  {title}\n                </Typography>\n                {/* NAME */}\n                {formType === \"signin\" && (\n                  <FormControl\n                    error={errorName.length}\n                    className={classes.formControl}\n                  >\n                    <InputLabel htmlFor=\"name\">Nom</InputLabel>\n                    <Input id=\"userName\" name=\"name\" type=\"text\" />\n                    {errorName !== \"\" ? (\n                      <FormHelperText className={classes.errors}>\n                        {errorName}\n                      </FormHelperText>\n                    ) : null}\n                  </FormControl>\n                )}\n                {/* EMAIL */}\n                <FormControl\n                  error={errorEmail.length}\n                  className={classes.formControl}\n                >\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\n                  <Input id=\"userEmail\" type=\"email\" name=\"email\" />\n                  {errorEmail !== \"\" ? (\n                    <FormHelperText className={classes.errors}>\n                      {errorEmail}\n                    </FormHelperText>\n                  ) : null}\n                </FormControl>\n                {/* TELEPHONE */}\n                {formType === \"signin\" && (\n                  <FormControl\n                    error={errorPhone.length}\n                    className={classes.formControl}\n                  >\n                    <InputLabel htmlFor=\"phone\">Téléphone</InputLabel>\n                    <Input id=\"userPhone\" type=\"tel\" name=\"phone\" />\n                    {errorPhone !== \"\" ? (\n                      <FormHelperText className={classes.errors}>\n                        {errorPhone}\n                      </FormHelperText>\n                    ) : null}\n                  </FormControl>\n                )}\n                {/* PASSWORD */}\n                <FormControl\n                  className={classes.formControl}\n                  aria-describedby=\"password\"\n                  required\n                  error={errorMdp.length}\n                >\n                  <InputLabel htmlFor=\"password\">Password</InputLabel>\n                  <Input\n                    id=\"userPassword\"\n                    type={this.state.showPassword ? \"text\" : \"password\"}\n                    name=\"userPassword\"\n                    onChange={e => this.handleChange(e)}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"Toggle password visibility\"\n                          onClick={e => this.handleClickShowPassword(e)}\n                        >\n                          {this.state.showPassword ? (\n                            <VisibilityOff />\n                          ) : (\n                            <Visibility />\n                          )}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                  {errorMdp !== \"\" ? (\n                    <FormHelperText className={classes.errors}>\n                      {errorMdp}\n                    </FormHelperText>\n                  ) : null}\n                </FormControl>\n                {/* PASSWORD CONFIRM */}\n                {formType === \"signin\" && this.state.userPassword.length > 0 && (\n                  <FormControl\n                    className={classes.formControl}\n                    aria-describedby=\"password\"\n                  >\n                    <InputLabel htmlFor=\"inputConfirmPassword\">\n                      Confirmer Mot de passe\n                    </InputLabel>\n\n                    <Input\n                      id=\"inputConfirmPassword\"\n                      error={confErrorMdp}\n                      type={this.state.showPasswordBis ? \"text\" : \"password\"}\n                      name=\"confirmPassword\"\n                      onChange={e => this.handleChange(e)}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"Toggle password visibility\"\n                            onClick={e => this.handleClickShowPasswordBis(e)}\n                          >\n                            {this.state.showPasswordBis ? (\n                              <VisibilityOff />\n                            ) : (\n                              <Visibility />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                    {confErrorMdp !== \"\" ? (\n                      <FormHelperText className={classes.errors}>\n                        {confErrorMdp}\n                      </FormHelperText>\n                    ) : null}\n                  </FormControl>\n                )}\n                <Button\n                  style={{ marginTop: \"2rem\" }}\n                  variant=\"contained\"\n                  fullWidth={true}\n                  color=\"secondary\"\n                  className={classes.button}\n                  type=\"submit\"\n                  disabled={noValidate}\n                >\n                  Valider\n                </Button>\n                {/* Part for login only */}\n                {formType === \"login\" && (\n                  <div>\n                    <Typography\n                      component=\"a\"\n                      href=\"/identification/rappel-de-mot-de-passe\"\n                      align=\"right\"\n                      variant=\"caption\"\n                      style={{ marginTop: \"0.3rem\", textDecoration: \"none\" }}\n                    >\n                      Mot de passe oublié\n                    </Typography>\n                    <Typography\n                      variant=\"subheading\"\n                      color=\"primary\"\n                      align=\"center\"\n                      style={{ marginTop: \"2.6rem\", marginBottom: \"0.7rem\" }}\n                    >\n                      C'est votre première commande\n                    </Typography>\n                    <Button\n                      variant=\"contained\"\n                      fullWidth={true}\n                      className={classes.button}\n                      onClick={() => this.goToCreate()}\n                      disabled={noValidate}\n                    >\n                      Créer un compte\n                    </Button>\n                  </div>\n                )}\n              </form>\n            </Paper>\n          </Grid>\n        </Grid>\n        <Snackbar\n          open={onOpenSnack}\n          autoHideDuration={3000}\n          onClose={onSnackClose}\n          TransitionComponent={Fade}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={message}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AccountForm);\n"]},"metadata":{},"sourceType":"module"}